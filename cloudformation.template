{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Parameters" : {
    "applicationName" : {
      "Type" : "String",
      "Default" : "applicationstack"
    }
  },
  "Outputs" : {
    "MyStackName" : {
      "Value" : {
        "Ref" : "AWS::StackName"
      }
    }
  },
  "Resources" : {
    "ImageRepository" : {
      "Type" : "AWS::ECR::Repository",
      "Properties" : {
        "RepositoryName" : {
          "Ref" : "applicationName"
        }
      }
    },
    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Description" : "ALB VPC",
      "Properties" : {
        "CidrBlock" : "10.0.0.0/16",
        "EnableDnsHostnames" : "true",
        "EnableDnsSupport" : "true"
      }
    },
    "internetGateway" : {
      "Type" : "AWS::EC2::InternetGateway"
    },
    "AttachGateway" : {
      "Type" : "AWS::EC2::VPCGatewayAttachment",
      "Properties" : {
        "VpcId" : {
          "Ref" : "VPC"
        },
        "InternetGatewayId" : {
          "Ref" : "internetGateway"
        }
      }
    },
    "Subnet1" : {
      "Type" : "AWS::EC2::Subnet",
      "Description" : "ALB VPC",
      "Properties" : {
        "AvailabilityZone" : "eu-west-1a",
        "CidrBlock" : "10.0.0.0/24",
        "VpcId" : {
          "Ref" : "VPC"
        }
      }
    },
    "Subnet2" : {
      "Type" : "AWS::EC2::Subnet",
      "Description" : "ALB VPC",
      "Properties" : {
        "AvailabilityZone" : "eu-west-1b",
        "CidrBlock" : "10.0.1.0/24",
        "VpcId" : {
          "Ref" : "VPC"
        }
      }
    },
    "routeTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {
          "Ref" : "VPC"
        }
      }
    },
    "routeToInternet" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "internetGateway",
      "Properties" : {
        "RouteTableId" : {
          "Ref" : "routeTable"
        },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : {
          "Ref" : "internetGateway"
        }
      }
    },
    "taskdefinition" : {
      "Type" : "AWS::ECS::TaskDefinition",
      "Properties" : {
        "ContainerDefinitions" : [ {
          "Name" : {
            "Ref" : "applicationName"
          },
          "Image" : "829867751173.dkr.ecr.eu-west-1.amazonaws.com/applications/spring-boot-web-jsp:build-4c512481-7fe2-4054-8ae0-35e15d3401cf",
          "Cpu" : "256",
          "PortMappings" : [ {
            "ContainerPort" : "8080",
            "HostPort" : "8080"
          } ],
          "Memory" : "512",
          "Essential" : "true"
        } ]
      }
    },
    "loadBalancer" : {
      "Type" : "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties" : {
        "Name" : "FargateLoadBalancer",
        "SecurityGroups" : [ {
          "Ref" : "loadBalancerSecurityGroup"
        } ],
        "Scheme" : "internet-facing",
        "Subnets" : [ {
          "Ref" : "Subnet1"
        }, {
          "Ref" : "Subnet2"
        } ],
        "Type" : "application"
      }
    },
    "HTTPlistener" : {
      "Type" : "AWS::ElasticLoadBalancingV2::Listener",
      "Properties" : {
        "DefaultActions" : [ {
          "Type" : "forward",
          "TargetGroupArn" : {
            "Ref" : "targetGroup"
          }
        } ],
        "LoadBalancerArn" : {
          "Ref" : "loadBalancer"
        },
        "Port" : 80,
        "Protocol" : "HTTP"
      }
    },
    "targetGroup" : {
      "Type" : "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties" : {
        "Port" : "8080",
        "Protocol" : "HTTP",
        "VpcId" : {
          "Ref" : "VPC"
        }
      }
    },
    "loadBalancerSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Load Balancer Security Group",
        "GroupName" : "LoadBalancerSecurityGroup",
        "SecurityGroupIngress" : [ {
          "CidrIp" : "0.0.0.0/0",
          "FromPort" : 80,
          "IpProtocol" : "TCP",
          "ToPort" : 80
        } ],
        "VpcId" : {
          "Ref" : "VPC"
        }
      }
    },
    "Cluster" : {
      "Type" : "AWS::ECS::Cluster",
      "Properties" : {
        "ClusterName" : {
          "Ref" : "applicationName"
        }
      }
    }
  }
}